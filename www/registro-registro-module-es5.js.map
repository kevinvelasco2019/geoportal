{"version":3,"sources":["webpack:///src/app/registro/registro.page.html","webpack:///src/app/registro/registro-routing.module.ts","webpack:///src/app/registro/registro.module.ts","webpack:///src/app/registro/registro.page.scss","webpack:///src/app/registro/registro.page.ts","webpack:///src/app/services/auth.service.ts"],"names":["routes","path","component","RegistroPageRoutingModule","imports","forChild","exports","RegistroPageModule","declarations","RegistroPage","alertController","toastController","taskService","router","authService","email","password","confirmarpassword","nombre","apellido","task","correo","contraseña","crearUsuario","subscribe","newTask","console","log","create","message","duration","toast","present","navigate","header","buttons","alert","selector","template","AuthService","AFauth","db","Promise","resolved","rejected","auth","signInWithEmailAndPassword","then","user","err","signOut","createUserWithEmailAndPassword","res","uid","collection","doc","set","authState","usuario","providedIn"],"mappings":"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","file":"registro-registro-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar color=\\\"dark\\\">\\n    <ion-title>\\n      Registrarse\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <body>\\n    \\n    <div class=\\\"formulario\\\">\\n      <img class=\\\"imagen\\\" src=\\\"../../assets/icon/registro.png\\\">\\n        <ion-label position=\\\"floating\\\">Nombre:</ion-label>\\n        <ion-input [(ngModel)]=\\\"nombre\\\" class=\\\"campos\\\" type=\\\"text\\\" name=\\\"nombre\\\"></ion-input>\\n        <ion-label position=\\\"floating\\\">Apellido:</ion-label>\\n        <ion-input [(ngModel)]=\\\"apellido\\\" class=\\\"campos\\\" type=\\\"text\\\" name=\\\"apellido\\\"></ion-input>\\n        <ion-label position=\\\"floating\\\">Correo Electrónico:</ion-label>\\n        <ion-input [(ngModel)]=\\\"email\\\" class=\\\"campos\\\" type=\\\"text\\\" name=\\\"email\\\"></ion-input>\\n        <ion-label position=\\\"floating\\\">Contraseña:</ion-label>\\n        <ion-input [(ngModel)]=\\\"password\\\" class=\\\"campos\\\" type=\\\"password\\\" name=\\\"contraseña\\\"></ion-input>\\n        <ion-label position=\\\"floating\\\">Confirmar contraseña:</ion-label>\\n        <ion-input [(ngModel)]=\\\"confirmarpassword\\\" class=\\\"campos\\\" type=\\\"password\\\" name=\\\"contraseña\\\"></ion-input>\\n        <ion-button class=\\\"ion-text-center botones\\\" color=\\\"danger\\\" (click)=\\\"crearUsuario()\\\">Registrarse</ion-button>\\n        <ion-button class=\\\"ion-text-center botones\\\" color=\\\"dark\\\" (click)=\\\"iniciarSesion()\\\">Ya tengo una cuenta</ion-button>\\n    </div>\\n  </body>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { RegistroPage } from './registro.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RegistroPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class RegistroPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { RegistroPageRoutingModule } from './registro-routing.module';\n\nimport { RegistroPage } from './registro.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RegistroPageRoutingModule\n  ],\n  declarations: [RegistroPage]\n})\nexport class RegistroPageModule {}\n","export default \".formulario {\\n  height: 100%;\\n  margin-left: 10%;\\n  margin-right: 10%;\\n  font-weight: bold;\\n}\\n\\n.botones {\\n  width: 100%;\\n  height: 40px;\\n  margin-top: 4%;\\n}\\n\\n.campos {\\n  background: rgba(0, 0, 0, 0.05);\\n}\\n\\n.imagen {\\n  display: block;\\n  margin-left: auto;\\n  margin-right: auto;\\n  margin-top: 5%;\\n  margin-bottom: 5%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcmVnaXN0cm8vQzpcXEFwbGljYWNpb25lc1xcVGVzaXNHZW9wb3J0YWwvc3JjXFxhcHBcXHJlZ2lzdHJvXFxyZWdpc3Ryby5wYWdlLnNjc3MiLCJzcmMvYXBwL3JlZ2lzdHJvL3JlZ2lzdHJvLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFlBQUE7RUFDQSxnQkFBQTtFQUNBLGlCQUFBO0VBQ0EsaUJBQUE7QUNDRjs7QURDRTtFQUNFLFdBQUE7RUFDQSxZQUFBO0VBQ0EsY0FBQTtBQ0VKOztBREFFO0VBQ0UsK0JBQUE7QUNHSjs7QUREQTtFQUNFLGNBQUE7RUFDQSxpQkFBQTtFQUNBLGtCQUFBO0VBQ0EsY0FBQTtFQUNBLGlCQUFBO0FDSUYiLCJmaWxlIjoic3JjL2FwcC9yZWdpc3Ryby9yZWdpc3Ryby5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZm9ybXVsYXJpb3tcclxuICBoZWlnaHQ6IDEwMCU7XHJcbiAgbWFyZ2luLWxlZnQ6IDEwJTtcclxuICBtYXJnaW4tcmlnaHQ6IDEwJTtcclxuICBmb250LXdlaWdodDogYm9sZDtcclxuICB9XHJcbiAgLmJvdG9uZXN7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogNDBweDtcclxuICAgIG1hcmdpbi10b3A6IDQlO1xyXG4gIH1cclxuICAuY2FtcG9ze1xyXG4gICAgYmFja2dyb3VuZDogcmdiYSgwLDAsMCwgLjA1KTtcclxufVxyXG4uaW1hZ2Vue1xyXG4gIGRpc3BsYXk6IGJsb2NrO1xyXG4gIG1hcmdpbi1sZWZ0OiBhdXRvO1xyXG4gIG1hcmdpbi1yaWdodDogYXV0bztcclxuICBtYXJnaW4tdG9wOiA1JTtcclxuICBtYXJnaW4tYm90dG9tOiA1JTtcclxufVxyXG4iLCIuZm9ybXVsYXJpbyB7XG4gIGhlaWdodDogMTAwJTtcbiAgbWFyZ2luLWxlZnQ6IDEwJTtcbiAgbWFyZ2luLXJpZ2h0OiAxMCU7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuXG4uYm90b25lcyB7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDQwcHg7XG4gIG1hcmdpbi10b3A6IDQlO1xufVxuXG4uY2FtcG9zIHtcbiAgYmFja2dyb3VuZDogcmdiYSgwLCAwLCAwLCAwLjA1KTtcbn1cblxuLmltYWdlbiB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBtYXJnaW4tbGVmdDogYXV0bztcbiAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xuICBtYXJnaW4tdG9wOiA1JTtcbiAgbWFyZ2luLWJvdHRvbTogNSU7XG59Il19 */\";","import { Component, OnInit } from '@angular/core';\nimport { AlertController } from '@ionic/angular';\nimport { ToastController } from '@ionic/angular';\nimport { TaskService } from './../services/task.service';\nimport { Router } from '@angular/router';\nimport { AuthService } from './../services/auth.service';\n@Component({\n  selector: 'app-registro',\n  templateUrl: './registro.page.html',\n  styleUrls: ['./registro.page.scss'],\n})\nexport class RegistroPage implements OnInit {\n  email: string;\n  password: string;\n  confirmarpassword: string;\n  nombre: string;\n  apellido: string;\n  constructor(public alertController: AlertController, public toastController: ToastController, private taskService: TaskService,\n     public router: Router, private authService: AuthService) { }\n\n  ngOnInit() {\n  }\n  async crearUsuario(){\n    if (this.email !== '' && this.password !== '' && this.confirmarpassword !== '' && this.nombre !== '' && this.apellido !== ''){\n      if (this.password === this.confirmarpassword){\n        const task = {\n          nombre: this.nombre,\n          apellido: this.apellido,\n          correo: this.email,\n          contraseña: this.password\n        };\n        this.taskService.crearUsuario(task)\n        .subscribe((newTask) =>{\n        console.log(newTask);\n        });\n        const toast = await this.toastController.create({\n          message: 'Usuario registrado correctamente',\n          duration: 4000\n          });\n        toast.present();\n        this.router.navigate(['/home']);\n    } else{\n      const alert = await this.alertController.create({\n        header: 'Error',\n        message: 'Las contraseñas no coinciden',\n        buttons: ['Cerrar']\n      });\n      await alert.present();\n    }\n  } else{\n    const alert = await this.alertController.create({\n      header: 'Error',\n      message: 'Todos los campos son obligatorios',\n      buttons: ['Cerrar']\n    });\n    await alert.present();\n  }\n }\n iniciarSesion(){\n  this.router.navigate(['/login']);\n }\n}\n","import { Injectable } from '@angular/core';\nimport { AngularFireAuth } from 'angularfire2/auth';\nimport { promise } from 'protractor';\nimport { AngularFirestore } from 'angularfire2/firestore';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  uid: string;\n\n  constructor(private AFauth: AngularFireAuth, private db: AngularFirestore, private router: Router) { }\n  login(email: string, password: string){\n    return new Promise ((resolved, rejected) => {\n      this.AFauth.auth.signInWithEmailAndPassword(email, password).then(user => {\n        resolved(user);\n        console.log('logueado');\n      }).catch(err => rejected(err));\n    });\n  }\n  logout(){\n    this.AFauth.auth.signOut().then(() => {\n      this.router.navigate(['/home']);\n    })\n  }\n  registro(email: string, password: string, nombre: string, apellido: string){\n    return new Promise ((resolved, rejected) => {\n    this.AFauth.auth.createUserWithEmailAndPassword(email, password).then(res => {\n      const uid = res.user.uid;\n      this.db.collection('usuarios').doc(uid).set({\n        nombre: nombre,\n        apellido: apellido,\n        uid: uid\n      })\n      resolved(res);\n    }).catch(err => rejected(err));\n  });\n }\n usuario(){\n    return this.AFauth.authState;\n}\n obtenerDatos(){\n  this.usuario().subscribe(user => \n    this.uid = user.uid);\n}\n\n}\n"]}